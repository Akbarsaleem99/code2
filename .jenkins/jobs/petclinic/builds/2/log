Started by GitHub push by Akbarsaleem99
Running as SYSTEM
Building in workspace /root/.jenkins/workspace/petclinic
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /root/.jenkins/workspace/petclinic/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url git@github.com:Akbarsaleem99/petclinic.git # timeout=10
Fetching upstream changes from git@github.com:Akbarsaleem99/petclinic.git
 > git --version # timeout=10
 > git --version # 'git version 2.37.1'
 > git fetch --tags --force --progress -- git@github.com:Akbarsaleem99/petclinic.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse origin/master^{commit} # timeout=10
Checking out Revision 27edadfe11d318123ea12d87838de09582c5eab0 (origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 27edadfe11d318123ea12d87838de09582c5eab0 # timeout=10
Commit message: "Create info.txt"
 > git rev-list --no-walk ec059fbe79d18d9414670638e63f874a0c060690 # timeout=10
[petclinic] $ mvn package
[INFO] Scanning for projects...
[INFO] 
[INFO] --------------------< thymeleafexamples:petclinic >---------------------
[INFO] Building petclinic 20140513
[INFO] --------------------------------[ war ]---------------------------------
[INFO] 
[8mha:////4HEneeZge/z+9sLLF2NoPdCcgO47dUl9YgJHPUuS+dA2AAAAYB+LCAAAAAAAAP9b85aBtbiIQSmjNKU4P0+vJLE4u1gvPjexLDVPzxdEGvvmZ+X75Zek2mxOX+vh68DGxMBQUcQgBdWQnJ9XnJ+TqucMoUEKGSCAEaSwAAAn9LoiYAAAAA==[0m[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ petclinic ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 18 resources
[INFO] 
[8mha:////4HEneeZge/z+9sLLF2NoPdCcgO47dUl9YgJHPUuS+dA2AAAAYB+LCAAAAAAAAP9b85aBtbiIQSmjNKU4P0+vJLE4u1gvPjexLDVPzxdEGvvmZ+X75Zek2mxOX+vh68DGxMBQUcQgBdWQnJ9XnJ+TqucMoUEKGSCAEaSwAAAn9LoiYAAAAA==[0m[INFO] --- maven-compiler-plugin:3.0:compile (default-compile) @ petclinic ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 44 source files to /root/.jenkins/workspace/petclinic/target/classes
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jdbc/JdbcVetRepositoryImpl.java]]
[parsing completed 63ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jpa/JpaVisitRepositoryImpl.java]]
[parsing completed 1ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/web/OwnerController.java]]
[parsing completed 5ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/model/Pet.java]]
[parsing completed 2ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/web/VetController.java]]
[parsing completed 1ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/repository/springdatajpa/SpringDataVisitRepository.java]]
[parsing completed 0ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/util/CallMonitoringAspect.java]]
[parsing completed 2ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/web/PetTypeFormatter.java]]
[parsing completed 1ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/model/package-info.java]]
[parsing completed 2ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/repository/VisitRepository.java]]
[parsing completed 1ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/web/CrashController.java]]
[parsing completed 1ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/web/PetController.java]]
[parsing completed 2ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/web/package-info.java]]
[parsing completed 0ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/repository/VetRepository.java]]
[parsing completed 0ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jdbc/JdbcVisitRepositoryImpl.java]]
[parsing completed 1ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/model/Person.java]]
[parsing completed 0ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jpa/JpaPetRepositoryImpl.java]]
[parsing completed 0ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/repository/springdatajpa/SpringDataVetRepository.java]]
[parsing completed 0ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/model/PetType.java]]
[parsing completed 1ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/model/Specialty.java]]
[parsing completed 0ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/web/VetsAtomView.java]]
[parsing completed 1ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jdbc/JdbcPetRowMapper.java]]
[parsing completed 1ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/model/NamedEntity.java]]
[parsing completed 0ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/model/Vets.java]]
[parsing completed 0ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jpa/package-info.java]]
[parsing completed 0ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/service/ClinicServiceImpl.java]]
[parsing completed 1ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/repository/OwnerRepository.java]]
[parsing completed 0ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jdbc/JdbcOwnerRepositoryImpl.java]]
[parsing completed 10ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/repository/springdatajpa/SpringDataPetRepository.java]]
[parsing completed 1ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/util/EntityUtils.java]]
[parsing completed 0ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/repository/springdatajpa/JpaOwnerRepositoryImpl.java]]
[parsing completed 1ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/service/ClinicService.java]]
[parsing completed 0ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/model/Owner.java]]
[parsing completed 1ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/web/VisitController.java]]
[parsing completed 1ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/repository/PetRepository.java]]
[parsing completed 0ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/web/PetValidator.java]]
[parsing completed 0ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/model/Vet.java]]
[parsing completed 1ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jpa/JpaOwnerRepositoryImpl.java]]
[parsing completed 1ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/model/Visit.java]]
[parsing completed 1ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jdbc/JdbcPet.java]]
[parsing completed 0ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jdbc/JdbcPetRepositoryImpl.java]]
[parsing completed 1ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/model/BaseEntity.java]]
[parsing completed 0ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jpa/JpaVetRepositoryImpl.java]]
[parsing completed 0ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jdbc/package-info.java]]
[parsing completed 1ms]
[search path for source files: /root/.jenkins/workspace/petclinic/src/main/java]
[search path for class files: /opt/jdk1.8.0_271/jre/lib/resources.jar,/opt/jdk1.8.0_271/jre/lib/rt.jar,/opt/jdk1.8.0_271/jre/lib/sunrsasign.jar,/opt/jdk1.8.0_271/jre/lib/jsse.jar,/opt/jdk1.8.0_271/jre/lib/jce.jar,/opt/jdk1.8.0_271/jre/lib/charsets.jar,/opt/jdk1.8.0_271/jre/lib/jfr.jar,/opt/jdk1.8.0_271/jre/classes,/opt/jdk1.8.0_271/jre/lib/ext/nashorn.jar,/opt/jdk1.8.0_271/jre/lib/ext/dnsns.jar,/opt/jdk1.8.0_271/jre/lib/ext/zipfs.jar,/opt/jdk1.8.0_271/jre/lib/ext/sunec.jar,/opt/jdk1.8.0_271/jre/lib/ext/sunjce_provider.jar,/opt/jdk1.8.0_271/jre/lib/ext/sunpkcs11.jar,/opt/jdk1.8.0_271/jre/lib/ext/cldrdata.jar,/opt/jdk1.8.0_271/jre/lib/ext/localedata.jar,/opt/jdk1.8.0_271/jre/lib/ext/jaccess.jar,/opt/jdk1.8.0_271/jre/lib/ext/jfxrt.jar,/root/.jenkins/workspace/petclinic/target/classes,/root/.m2/repository/org/jadira/usertype/usertype.core/3.1.0.CR1/usertype.core-3.1.0.CR1.jar,/root/.m2/repository/org/jadira/usertype/usertype.spi/3.1.0.CR1/usertype.spi-3.1.0.CR1.jar,/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar,/root/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar,/root/.m2/repository/javax/xml/bind/jaxb-api/2.2.7/jaxb-api-2.2.7.jar,/root/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.7-b53/jaxb-impl-2.2.7-b53.jar,/root/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.7-b53/jaxb-api.jar,/root/.m2/repository/org/thymeleaf/thymeleaf/2.1.3.RELEASE/thymeleaf-2.1.3.RELEASE.jar,/root/.m2/repository/ognl/ognl/3.0.6/ognl-3.0.6.jar,/root/.m2/repository/org/javassist/javassist/3.16.1-GA/javassist-3.16.1-GA.jar,/root/.m2/repository/org/unbescape/unbescape/1.0/unbescape-1.0.jar,/root/.m2/repository/org/thymeleaf/thymeleaf-spring3/2.1.3.RELEASE/thymeleaf-spring3-2.1.3.RELEASE.jar,/root/.m2/repository/org/springframework/data/spring-data-jpa/1.3.0.RELEASE/spring-data-jpa-1.3.0.RELEASE.jar,/root/.m2/repository/org/springframework/data/spring-data-commons/1.5.0.RELEASE/spring-data-commons-1.5.0.RELEASE.jar,/root/.m2/repository/org/springframework/spring-core/3.2.2.RELEASE/spring-core-3.2.2.RELEASE.jar,/root/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar,/root/.m2/repository/org/springframework/spring-beans/3.2.2.RELEASE/spring-beans-3.2.2.RELEASE.jar,/root/.m2/repository/org/springframework/spring-context/3.2.2.RELEASE/spring-context-3.2.2.RELEASE.jar,/root/.m2/repository/org/springframework/spring-expression/3.2.2.RELEASE/spring-expression-3.2.2.RELEASE.jar,/root/.m2/repository/org/springframework/spring-jdbc/3.2.2.RELEASE/spring-jdbc-3.2.2.RELEASE.jar,/root/.m2/repository/org/springframework/spring-aop/3.2.2.RELEASE/spring-aop-3.2.2.RELEASE.jar,/root/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar,/root/.m2/repository/org/springframework/spring-webmvc/3.2.2.RELEASE/spring-webmvc-3.2.2.RELEASE.jar,/root/.m2/repository/org/springframework/spring-web/3.2.2.RELEASE/spring-web-3.2.2.RELEASE.jar,/root/.m2/repository/org/springframework/spring-tx/3.2.2.RELEASE/spring-tx-3.2.2.RELEASE.jar,/root/.m2/repository/org/springframework/spring-context-support/3.2.2.RELEASE/spring-context-support-3.2.2.RELEASE.jar,/root/.m2/repository/org/springframework/spring-orm/3.2.2.RELEASE/spring-orm-3.2.2.RELEASE.jar,/root/.m2/repository/org/springframework/spring-oxm/3.2.2.RELEASE/spring-oxm-3.2.2.RELEASE.jar,/root/.m2/repository/org/springframework/spring-jms/3.2.2.RELEASE/spring-jms-3.2.2.RELEASE.jar,/root/.m2/repository/rome/rome/1.0/rome-1.0.jar,/root/.m2/repository/jdom/jdom/1.0/jdom-1.0.jar,/root/.m2/repository/joda-time/joda-time/2.2/joda-time-2.2.jar,/root/.m2/repository/joda-time/joda-time-hibernate/1.3/joda-time-hibernate-1.3.jar,/root/.m2/repository/org/hibernate/hibernate-core/4.1.9.Final/hibernate-core-4.1.9.Final.jar,/root/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar,/root/.m2/repository/org/jboss/logging/jboss-logging/3.1.0.GA/jboss-logging-3.1.0.GA.jar,/root/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.1_spec/1.0.0.Final/jboss-transaction-api_1.1_spec-1.0.0.Final.jar,/root/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar,/root/.m2/repository/org/hibernate/common/hibernate-commons-annotations/4.0.1.Final/hibernate-commons-annotations-4.0.1.Final.jar,/root/.m2/repository/org/hibernate/hibernate-entitymanager/4.1.9.Final/hibernate-entitymanager-4.1.9.Final.jar,/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar,/root/.m2/repository/org/hibernate/hibernate-validator/4.3.0.Final/hibernate-validator-4.3.0.Final.jar,/root/.m2/repository/org/hibernate/hibernate-ehcache/4.1.9.Final/hibernate-ehcache-4.1.9.Final.jar,/root/.m2/repository/net/sf/ehcache/ehcache-core/2.6.5/ehcache-core-2.6.5.jar,/root/.m2/repository/org/webjars/bootstrap/2.3.0/bootstrap-2.3.0.jar,/root/.m2/repository/org/webjars/jquery-ui/1.9.2/jquery-ui-1.9.2.jar,/root/.m2/repository/org/webjars/jquery/1.9.0/jquery-1.9.0.jar,/root/.m2/repository/org/aspectj/aspectjrt/1.7.2/aspectjrt-1.7.2.jar,.]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/sql/ResultSet.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/sql/SQLException.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-beans/3.2.2.RELEASE/spring-beans-3.2.2.RELEASE.jar(org/springframework/beans/factory/annotation/Autowired.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-tx/3.2.2.RELEASE/spring-tx-3.2.2.RELEASE.jar(org/springframework/dao/DataAccessException.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-jdbc/3.2.2.RELEASE/spring-jdbc-3.2.2.RELEASE.jar(org/springframework/jdbc/core/JdbcTemplate.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-jdbc/3.2.2.RELEASE/spring-jdbc-3.2.2.RELEASE.jar(org/springframework/jdbc/core/simple/ParameterizedBeanPropertyRowMapper.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-jdbc/3.2.2.RELEASE/spring-jdbc-3.2.2.RELEASE.jar(org/springframework/jdbc/core/simple/ParameterizedRowMapper.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-context/3.2.2.RELEASE/spring-context-3.2.2.RELEASE.jar(org/springframework/stereotype/Repository.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashSet.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/Entity.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/FetchType.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/JoinColumn.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/JoinTable.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/ManyToMany.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/Table.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/javax/xml/bind/annotation/XmlElement.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-beans/3.2.2.RELEASE/spring-beans-3.2.2.RELEASE.jar(org/springframework/beans/support/MutableSortDefinition.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-beans/3.2.2.RELEASE/spring-beans-3.2.2.RELEASE.jar(org/springframework/beans/support/PropertyComparator.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/Column.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/MappedSuperclass.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/hibernate-validator/4.3.0.Final/hibernate-validator-4.3.0.Final.jar(org/hibernate/validator/constraints/NotEmpty.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/GeneratedValue.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/GenerationType.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/Id.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/EntityManager.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/PersistenceContext.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/Query.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/ManyToOne.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/hibernate-core/4.1.9.Final/hibernate-core-4.1.9.Final.jar(org/hibernate/annotations/Type.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/joda-time/joda-time/2.2/joda-time-2.2.jar(org/joda/time/DateTime.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-context/3.2.2.RELEASE/spring-context-3.2.2.RELEASE.jar(org/springframework/format/annotation/DateTimeFormat.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/CascadeType.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/OneToMany.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar(javax/validation/constraints/Digits.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-core/3.2.2.RELEASE/spring-core-3.2.2.RELEASE.jar(org/springframework/core/style/ToStringCreator.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar(javax/validation/Valid.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-context/3.2.2.RELEASE/spring-context-3.2.2.RELEASE.jar(org/springframework/stereotype/Controller.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-context/3.2.2.RELEASE/spring-context-3.2.2.RELEASE.jar(org/springframework/ui/Model.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-context/3.2.2.RELEASE/spring-context-3.2.2.RELEASE.jar(org/springframework/validation/BindingResult.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-web/3.2.2.RELEASE/spring-web-3.2.2.RELEASE.jar(org/springframework/web/bind/WebDataBinder.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-web/3.2.2.RELEASE/spring-web-3.2.2.RELEASE.jar(org/springframework/web/bind/annotation/InitBinder.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-web/3.2.2.RELEASE/spring-web-3.2.2.RELEASE.jar(org/springframework/web/bind/annotation/PathVariable.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-web/3.2.2.RELEASE/spring-web-3.2.2.RELEASE.jar(org/springframework/web/bind/annotation/RequestMapping.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-web/3.2.2.RELEASE/spring-web-3.2.2.RELEASE.jar(org/springframework/web/bind/annotation/RequestMethod.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-web/3.2.2.RELEASE/spring-web-3.2.2.RELEASE.jar(org/springframework/web/bind/annotation/SessionAttributes.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-web/3.2.2.RELEASE/spring-web-3.2.2.RELEASE.jar(org/springframework/web/bind/support/SessionStatus.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-webmvc/3.2.2.RELEASE/spring-webmvc-3.2.2.RELEASE.jar(org/springframework/web/servlet/ModelAndView.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/data/spring-data-commons/1.5.0.RELEASE/spring-data-commons-1.5.0.RELEASE.jar(org/springframework/data/repository/Repository.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/aspectj/aspectjrt/1.7.2/aspectjrt-1.7.2.jar(org/aspectj/lang/ProceedingJoinPoint.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/aspectj/aspectjrt/1.7.2/aspectjrt-1.7.2.jar(org/aspectj/lang/annotation/Around.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/aspectj/aspectjrt/1.7.2/aspectjrt-1.7.2.jar(org/aspectj/lang/annotation/Aspect.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-context/3.2.2.RELEASE/spring-context-3.2.2.RELEASE.jar(org/springframework/jmx/export/annotation/ManagedAttribute.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-context/3.2.2.RELEASE/spring-context-3.2.2.RELEASE.jar(org/springframework/jmx/export/annotation/ManagedOperation.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-context/3.2.2.RELEASE/spring-context-3.2.2.RELEASE.jar(org/springframework/jmx/export/annotation/ManagedResource.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-core/3.2.2.RELEASE/spring-core-3.2.2.RELEASE.jar(org/springframework/util/StopWatch.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-context/3.2.2.RELEASE/spring-context-3.2.2.RELEASE.jar(org/springframework/format/Formatter.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-context/3.2.2.RELEASE/spring-context-3.2.2.RELEASE.jar(org/springframework/format/Printer.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-context/3.2.2.RELEASE/spring-context-3.2.2.RELEASE.jar(org/springframework/format/Parser.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-web/3.2.2.RELEASE/spring-web-3.2.2.RELEASE.jar(org/springframework/web/bind/annotation/ModelAttribute.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/javax/sql/DataSource.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-jdbc/3.2.2.RELEASE/spring-jdbc-3.2.2.RELEASE.jar(org/springframework/jdbc/core/namedparam/MapSqlParameterSource.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-jdbc/3.2.2.RELEASE/spring-jdbc-3.2.2.RELEASE.jar(org/springframework/jdbc/core/simple/SimpleJdbcInsert.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar(javax/servlet/http/HttpServletRequest.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar(javax/servlet/http/HttpServletResponse.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-webmvc/3.2.2.RELEASE/spring-webmvc-3.2.2.RELEASE.jar(org/springframework/web/servlet/view/feed/AbstractAtomFeedView.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/rome/rome/1.0/rome-1.0.jar(com/sun/syndication/feed/atom/Content.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/rome/rome/1.0/rome-1.0.jar(com/sun/syndication/feed/atom/Entry.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/rome/rome/1.0/rome-1.0.jar(com/sun/syndication/feed/atom/Feed.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-webmvc/3.2.2.RELEASE/spring-webmvc-3.2.2.RELEASE.jar(org/springframework/web/servlet/view/feed/AbstractFeedView.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-webmvc/3.2.2.RELEASE/spring-webmvc-3.2.2.RELEASE.jar(org/springframework/web/servlet/view/AbstractView.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-webmvc/3.2.2.RELEASE/spring-webmvc-3.2.2.RELEASE.jar(org/springframework/web/servlet/View.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-beans/3.2.2.RELEASE/spring-beans-3.2.2.RELEASE.jar(org/springframework/beans/factory/BeanNameAware.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-beans/3.2.2.RELEASE/spring-beans-3.2.2.RELEASE.jar(org/springframework/beans/factory/Aware.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-web/3.2.2.RELEASE/spring-web-3.2.2.RELEASE.jar(org/springframework/web/context/support/WebApplicationObjectSupport.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-web/3.2.2.RELEASE/spring-web-3.2.2.RELEASE.jar(org/springframework/web/context/ServletContextAware.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-context/3.2.2.RELEASE/spring-context-3.2.2.RELEASE.jar(org/springframework/context/support/ApplicationObjectSupport.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-context/3.2.2.RELEASE/spring-context-3.2.2.RELEASE.jar(org/springframework/context/ApplicationContextAware.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-jdbc/3.2.2.RELEASE/spring-jdbc-3.2.2.RELEASE.jar(org/springframework/jdbc/core/RowMapper.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/javax/xml/bind/annotation/XmlRootElement.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-context/3.2.2.RELEASE/spring-context-3.2.2.RELEASE.jar(org/springframework/cache/annotation/Cacheable.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-context/3.2.2.RELEASE/spring-context-3.2.2.RELEASE.jar(org/springframework/stereotype/Service.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-tx/3.2.2.RELEASE/spring-tx-3.2.2.RELEASE.jar(org/springframework/transaction/annotation/Transactional.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-tx/3.2.2.RELEASE/spring-tx-3.2.2.RELEASE.jar(org/springframework/dao/EmptyResultDataAccessException.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-jdbc/3.2.2.RELEASE/spring-jdbc-3.2.2.RELEASE.jar(org/springframework/jdbc/core/namedparam/BeanPropertySqlParameterSource.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-jdbc/3.2.2.RELEASE/spring-jdbc-3.2.2.RELEASE.jar(org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-orm/3.2.2.RELEASE/spring-orm-3.2.2.RELEASE.jar(org/springframework/orm/ObjectRetrievalFailureException.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/data/spring-data-jpa/1.3.0.RELEASE/spring-data-jpa-1.3.0.RELEASE.jar(org/springframework/data/jpa/repository/Query.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-core/3.2.2.RELEASE/spring-core-3.2.2.RELEASE.jar(org/springframework/util/StringUtils.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-context/3.2.2.RELEASE/spring-context-3.2.2.RELEASE.jar(org/springframework/validation/Errors.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-orm/3.2.2.RELEASE/spring-orm-3.2.2.RELEASE.jar(org/springframework/orm/hibernate3/support/OpenSessionInViewFilter.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Annotation.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar(javax/validation/Constraint.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar(javax/validation/constraints/Size.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Override.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/PersistenceContextType.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-context/3.2.2.RELEASE/spring-context-3.2.2.RELEASE.jar(org/springframework/format/annotation/DateTimeFormat$ISO.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/SuppressWarnings.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-tx/3.2.2.RELEASE/spring-tx-3.2.2.RELEASE.jar(org/springframework/transaction/annotation/Propagation.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-tx/3.2.2.RELEASE/spring-tx-3.2.2.RELEASE.jar(org/springframework/transaction/annotation/Isolation.class)]]
[checking org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Error.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-core/3.2.2.RELEASE/spring-core-3.2.2.RELEASE.jar(org/springframework/core/NestedRuntimeException.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractList.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractCollection.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Iterable.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-jdbc/3.2.2.RELEASE/spring-jdbc-3.2.2.RELEASE.jar(org/springframework/jdbc/core/BeanPropertyRowMapper.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-jdbc/3.2.2.RELEASE/spring-jdbc-3.2.2.RELEASE.jar(org/springframework/jdbc/core/PreparedStatementCreator.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CharSequence.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-jdbc/3.2.2.RELEASE/spring-jdbc-3.2.2.RELEASE.jar(org/springframework/jdbc/core/ResultSetExtractor.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-jdbc/3.2.2.RELEASE/spring-jdbc-3.2.2.RELEASE.jar(org/springframework/jdbc/core/JdbcOperations.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-jdbc/3.2.2.RELEASE/spring-jdbc-3.2.2.RELEASE.jar(org/springframework/jdbc/support/JdbcAccessor.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-beans/3.2.2.RELEASE/spring-beans-3.2.2.RELEASE.jar(org/springframework/beans/factory/InitializingBean.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-jdbc/3.2.2.RELEASE/spring-jdbc-3.2.2.RELEASE.jar(org/springframework/jdbc/core/RowCallbackHandler.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Wrapper.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-jdbc/3.2.2.RELEASE/spring-jdbc-3.2.2.RELEASE.jar(org/springframework/jdbc/core/PreparedStatementSetter.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Byte.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Character.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Short.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Long.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Float.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-tx/3.2.2.RELEASE/spring-tx-3.2.2.RELEASE.jar(org/springframework/dao/DataRetrievalFailureException.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-tx/3.2.2.RELEASE/spring-tx-3.2.2.RELEASE.jar(org/springframework/dao/NonTransientDataAccessException.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Double.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Boolean.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Void.class)]]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/repository/jdbc/JdbcVetRepositoryImpl$1.class]]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/repository/jdbc/JdbcVetRepositoryImpl.class]]
[checking org.springframework.samples.petclinic.repository.VetRepository]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/repository/VetRepository.class]]
[checking org.springframework.samples.petclinic.model.Vet]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractSet.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-beans/3.2.2.RELEASE/spring-beans-3.2.2.RELEASE.jar(org/springframework/beans/support/SortDefinition.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/util/Comparator.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-beans/3.2.2.RELEASE/spring-beans-3.2.2.RELEASE.jar(org/springframework/beans/BeansException.class)]]
[checking org.springframework.samples.petclinic.model.Person]
[checking org.springframework.samples.petclinic.model.BaseEntity]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/model/Vet.class]]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/model/Person.class]]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/model/BaseEntity.class]]
[checking org.springframework.samples.petclinic.model.Specialty]
[checking org.springframework.samples.petclinic.model.NamedEntity]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/model/Specialty.class]]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/model/NamedEntity.class]]
[checking org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/TypedQuery.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/criteria/CriteriaQuery.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/Parameter.class)]]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/repository/jpa/JpaVisitRepositoryImpl.class]]
[checking org.springframework.samples.petclinic.repository.VisitRepository]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/repository/VisitRepository.class]]
[checking org.springframework.samples.petclinic.model.Visit]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/model/Visit.class]]
[checking org.springframework.samples.petclinic.model.Pet]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/model/Pet.class]]
[checking org.springframework.samples.petclinic.model.PetType]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/model/PetType.class]]
[checking org.springframework.samples.petclinic.model.Owner]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/model/Owner.class]]
[checking org.springframework.samples.petclinic.web.OwnerController]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-context/3.2.2.RELEASE/spring-context-3.2.2.RELEASE.jar(org/springframework/validation/DataBinder.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-beans/3.2.2.RELEASE/spring-beans-3.2.2.RELEASE.jar(org/springframework/beans/PropertyEditorRegistry.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-beans/3.2.2.RELEASE/spring-beans-3.2.2.RELEASE.jar(org/springframework/beans/TypeConverter.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuilder.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AbstractStringBuilder.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Appendable.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuffer.class)]]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/web/OwnerController.class]]
[checking org.springframework.samples.petclinic.service.ClinicService]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/service/ClinicService.class]]
[checking org.springframework.samples.petclinic.web.VetController]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/web/VetController.class]]
[checking org.springframework.samples.petclinic.repository.springdatajpa.SpringDataVisitRepository]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/repository/springdatajpa/SpringDataVisitRepository.class]]
[checking org.springframework.samples.petclinic.util.CallMonitoringAspect]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/aspectj/aspectjrt/1.7.2/aspectjrt-1.7.2.jar(org/aspectj/lang/JoinPoint.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalStateException.class)]]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/util/CallMonitoringAspect.class]]
[checking org.springframework.samples.petclinic.web.PetTypeFormatter]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/web/PetTypeFormatter.class]]
[checking org.springframework.samples.petclinic.web.CrashController]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/web/CrashController.class]]
[checking org.springframework.samples.petclinic.web.PetController]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/web/PetController.class]]
[checking org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-jdbc/3.2.2.RELEASE/spring-jdbc-3.2.2.RELEASE.jar(org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-jdbc/3.2.2.RELEASE/spring-jdbc-3.2.2.RELEASE.jar(org/springframework/jdbc/core/simple/AbstractJdbcInsert.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-jdbc/3.2.2.RELEASE/spring-jdbc-3.2.2.RELEASE.jar(org/springframework/jdbc/core/namedparam/AbstractSqlParameterSource.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-jdbc/3.2.2.RELEASE/spring-jdbc-3.2.2.RELEASE.jar(org/springframework/jdbc/core/namedparam/SqlParameterSource.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/UnsupportedOperationException.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/joda-time/joda-time/2.2/joda-time-2.2.jar(org/joda/time/ReadableDateTime.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/joda-time/joda-time/2.2/joda-time-2.2.jar(org/joda/time/ReadableInstant.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/joda-time/joda-time/2.2/joda-time-2.2.jar(org/joda/time/base/BaseDateTime.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/joda-time/joda-time/2.2/joda-time-2.2.jar(org/joda/time/base/AbstractDateTime.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/joda-time/joda-time/2.2/joda-time-2.2.jar(org/joda/time/base/AbstractInstant.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Date.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/joda-time/joda-time/2.2/joda-time-2.2.jar(org/joda/time/Chronology.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/joda-time/joda-time/2.2/joda-time-2.2.jar(org/joda/time/DateTimeZone.class)]]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/repository/jdbc/JdbcVisitRepositoryImpl$1.class]]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/repository/jdbc/JdbcVisitRepositoryImpl.class]]
[checking org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/repository/jpa/JpaPetRepositoryImpl.class]]
[checking org.springframework.samples.petclinic.repository.PetRepository]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/repository/PetRepository.class]]
[checking org.springframework.samples.petclinic.repository.springdatajpa.SpringDataVetRepository]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/repository/springdatajpa/SpringDataVetRepository.class]]
[checking org.springframework.samples.petclinic.web.VetsAtomView]
[loading ZipFileIndexFileObject[/root/.m2/repository/rome/rome/1.0/rome-1.0.jar(com/sun/syndication/feed/WireFeed.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/rome/rome/1.0/rome-1.0.jar(com/sun/syndication/feed/module/Extendable.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar(javax/servlet/ServletResponse.class)]]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/web/VetsAtomView.class]]
[checking org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/repository/jdbc/JdbcPetRowMapper.class]]
[checking org.springframework.samples.petclinic.repository.jdbc.JdbcPet]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/repository/jdbc/JdbcPet.class]]
[checking org.springframework.samples.petclinic.model.Vets]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/model/Vets.class]]
[checking org.springframework.samples.petclinic.service.ClinicServiceImpl]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/service/ClinicServiceImpl.class]]
[checking org.springframework.samples.petclinic.repository.OwnerRepository]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/repository/OwnerRepository.class]]
[checking org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/javax/sql/CommonDataSource.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractMap.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-jdbc/3.2.2.RELEASE/spring-jdbc-3.2.2.RELEASE.jar(org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-tx/3.2.2.RELEASE/spring-tx-3.2.2.RELEASE.jar(org/springframework/dao/IncorrectResultSizeDataAccessException.class)]]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/repository/jdbc/JdbcOwnerRepositoryImpl.class]]
[checking org.springframework.samples.petclinic.repository.springdatajpa.SpringDataPetRepository]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/repository/springdatajpa/SpringDataPetRepository.class]]
[checking org.springframework.samples.petclinic.util.EntityUtils]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/GenericDeclaration.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/AnnotatedElement.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Type.class)]]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/util/EntityUtils.class]]
[checking org.springframework.samples.petclinic.repository.springdatajpa.JpaOwnerRepositoryImpl]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/repository/springdatajpa/JpaOwnerRepositoryImpl.class]]
[checking org.springframework.samples.petclinic.web.VisitController]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/web/VisitController.class]]
[checking org.springframework.samples.petclinic.web.PetValidator]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/web/PetValidator.class]]
[checking org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/repository/jpa/JpaOwnerRepositoryImpl.class]]
[checking org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/repository/jdbc/JdbcPetRepositoryImpl.class]]
[checking org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/repository/jpa/JpaVetRepositoryImpl.class]]
[total 1484ms]
[8mha:////4PdUVUWb9rjxH45CEUWo0p+16YC1YHSbjw1G62X6l+9sAAAAYh+LCAAAAAAAAP9b85aBtbiIQSWjNKU4P0+vJLE4u1gvPjexLDVPzxdEhicW5WXmpfvll6SeOJwgmrt9CSsTA0NFEYMUVEtyfl5xfk6qnjOEBilkgABGkMICAEQzmI1iAAAA[0m[WARNING] bootstrap class path not set in conjunction with -source 1.6
[INFO] 
[8mha:////4HEneeZge/z+9sLLF2NoPdCcgO47dUl9YgJHPUuS+dA2AAAAYB+LCAAAAAAAAP9b85aBtbiIQSmjNKU4P0+vJLE4u1gvPjexLDVPzxdEGvvmZ+X75Zek2mxOX+vh68DGxMBQUcQgBdWQnJ9XnJ+TqucMoUEKGSCAEaSwAAAn9LoiYAAAAA==[0m[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ petclinic ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] 
[8mha:////4HEneeZge/z+9sLLF2NoPdCcgO47dUl9YgJHPUuS+dA2AAAAYB+LCAAAAAAAAP9b85aBtbiIQSmjNKU4P0+vJLE4u1gvPjexLDVPzxdEGvvmZ+X75Zek2mxOX+vh68DGxMBQUcQgBdWQnJ9XnJ+TqucMoUEKGSCAEaSwAAAn9LoiYAAAAA==[0m[INFO] --- maven-compiler-plugin:3.0:testCompile (default-testCompile) @ petclinic ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 6 source files to /root/.jenkins/workspace/petclinic/target/test-classes
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/test/java/org/springframework/samples/petclinic/service/AbstractClinicServiceTests.java]]
[parsing completed 7ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/test/java/org/springframework/samples/petclinic/service/ClinicServiceSpringDataJpaTests.java]]
[parsing completed 0ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/test/java/org/springframework/samples/petclinic/service/ClinicServiceJpaTests.java]]
[parsing completed 0ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/test/java/org/springframework/samples/petclinic/model/OwnerTests.java]]
[parsing completed 1ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/test/java/org/springframework/samples/petclinic/web/VisitsViewTest.java]]
[parsing completed 5ms]
[parsing started RegularFileObject[/root/.jenkins/workspace/petclinic/src/test/java/org/springframework/samples/petclinic/service/ClinicServiceJdbcTests.java]]
[parsing completed 0ms]
[search path for source files: /root/.jenkins/workspace/petclinic/src/test/java]
[search path for class files: /opt/jdk1.8.0_271/jre/lib/resources.jar,/opt/jdk1.8.0_271/jre/lib/rt.jar,/opt/jdk1.8.0_271/jre/lib/sunrsasign.jar,/opt/jdk1.8.0_271/jre/lib/jsse.jar,/opt/jdk1.8.0_271/jre/lib/jce.jar,/opt/jdk1.8.0_271/jre/lib/charsets.jar,/opt/jdk1.8.0_271/jre/lib/jfr.jar,/opt/jdk1.8.0_271/jre/classes,/opt/jdk1.8.0_271/jre/lib/ext/nashorn.jar,/opt/jdk1.8.0_271/jre/lib/ext/dnsns.jar,/opt/jdk1.8.0_271/jre/lib/ext/zipfs.jar,/opt/jdk1.8.0_271/jre/lib/ext/sunec.jar,/opt/jdk1.8.0_271/jre/lib/ext/sunjce_provider.jar,/opt/jdk1.8.0_271/jre/lib/ext/sunpkcs11.jar,/opt/jdk1.8.0_271/jre/lib/ext/cldrdata.jar,/opt/jdk1.8.0_271/jre/lib/ext/localedata.jar,/opt/jdk1.8.0_271/jre/lib/ext/jaccess.jar,/opt/jdk1.8.0_271/jre/lib/ext/jfxrt.jar,/root/.jenkins/workspace/petclinic/target/test-classes,/root/.jenkins/workspace/petclinic/target/classes,/root/.m2/repository/org/jadira/usertype/usertype.core/3.1.0.CR1/usertype.core-3.1.0.CR1.jar,/root/.m2/repository/org/jadira/usertype/usertype.spi/3.1.0.CR1/usertype.spi-3.1.0.CR1.jar,/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar,/root/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar,/root/.m2/repository/javax/xml/bind/jaxb-api/2.2.7/jaxb-api-2.2.7.jar,/root/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.7-b53/jaxb-impl-2.2.7-b53.jar,/root/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.7-b53/jaxb-api.jar,/root/.m2/repository/org/thymeleaf/thymeleaf/2.1.3.RELEASE/thymeleaf-2.1.3.RELEASE.jar,/root/.m2/repository/ognl/ognl/3.0.6/ognl-3.0.6.jar,/root/.m2/repository/org/javassist/javassist/3.16.1-GA/javassist-3.16.1-GA.jar,/root/.m2/repository/org/unbescape/unbescape/1.0/unbescape-1.0.jar,/root/.m2/repository/org/thymeleaf/thymeleaf-spring3/2.1.3.RELEASE/thymeleaf-spring3-2.1.3.RELEASE.jar,/root/.m2/repository/org/springframework/data/spring-data-jpa/1.3.0.RELEASE/spring-data-jpa-1.3.0.RELEASE.jar,/root/.m2/repository/org/springframework/data/spring-data-commons/1.5.0.RELEASE/spring-data-commons-1.5.0.RELEASE.jar,/root/.m2/repository/org/springframework/spring-core/3.2.2.RELEASE/spring-core-3.2.2.RELEASE.jar,/root/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar,/root/.m2/repository/org/springframework/spring-beans/3.2.2.RELEASE/spring-beans-3.2.2.RELEASE.jar,/root/.m2/repository/org/springframework/spring-context/3.2.2.RELEASE/spring-context-3.2.2.RELEASE.jar,/root/.m2/repository/org/springframework/spring-expression/3.2.2.RELEASE/spring-expression-3.2.2.RELEASE.jar,/root/.m2/repository/org/springframework/spring-jdbc/3.2.2.RELEASE/spring-jdbc-3.2.2.RELEASE.jar,/root/.m2/repository/org/springframework/spring-aop/3.2.2.RELEASE/spring-aop-3.2.2.RELEASE.jar,/root/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar,/root/.m2/repository/org/springframework/spring-webmvc/3.2.2.RELEASE/spring-webmvc-3.2.2.RELEASE.jar,/root/.m2/repository/org/springframework/spring-web/3.2.2.RELEASE/spring-web-3.2.2.RELEASE.jar,/root/.m2/repository/org/springframework/spring-tx/3.2.2.RELEASE/spring-tx-3.2.2.RELEASE.jar,/root/.m2/repository/org/springframework/spring-context-support/3.2.2.RELEASE/spring-context-support-3.2.2.RELEASE.jar,/root/.m2/repository/org/springframework/spring-orm/3.2.2.RELEASE/spring-orm-3.2.2.RELEASE.jar,/root/.m2/repository/org/springframework/spring-oxm/3.2.2.RELEASE/spring-oxm-3.2.2.RELEASE.jar,/root/.m2/repository/org/springframework/spring-jms/3.2.2.RELEASE/spring-jms-3.2.2.RELEASE.jar,/root/.m2/repository/commons-dbcp/commons-dbcp/1.4/commons-dbcp-1.4.jar,/root/.m2/repository/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar,/root/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.2/jcl-over-slf4j-1.7.2.jar,/root/.m2/repository/org/slf4j/slf4j-api/1.7.2/slf4j-api-1.7.2.jar,/root/.m2/repository/org/slf4j/jul-to-slf4j/1.7.2/jul-to-slf4j-1.7.2.jar,/root/.m2/repository/ch/qos/logback/logback-classic/1.0.9/logback-classic-1.0.9.jar,/root/.m2/repository/ch/qos/logback/logback-core/1.0.9/logback-core-1.0.9.jar,/root/.m2/repository/rome/rome/1.0/rome-1.0.jar,/root/.m2/repository/jdom/jdom/1.0/jdom-1.0.jar,/root/.m2/repository/joda-time/joda-time/2.2/joda-time-2.2.jar,/root/.m2/repository/joda-time/joda-time-hibernate/1.3/joda-time-hibernate-1.3.jar,/root/.m2/repository/org/hsqldb/hsqldb/2.2.9/hsqldb-2.2.9.jar,/root/.m2/repository/org/hibernate/hibernate-core/4.1.9.Final/hibernate-core-4.1.9.Final.jar,/root/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar,/root/.m2/repository/org/jboss/logging/jboss-logging/3.1.0.GA/jboss-logging-3.1.0.GA.jar,/root/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.1_spec/1.0.0.Final/jboss-transaction-api_1.1_spec-1.0.0.Final.jar,/root/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar,/root/.m2/repository/org/hibernate/common/hibernate-commons-annotations/4.0.1.Final/hibernate-commons-annotations-4.0.1.Final.jar,/root/.m2/repository/org/hibernate/hibernate-entitymanager/4.1.9.Final/hibernate-entitymanager-4.1.9.Final.jar,/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar,/root/.m2/repository/org/hibernate/hibernate-validator/4.3.0.Final/hibernate-validator-4.3.0.Final.jar,/root/.m2/repository/org/hibernate/hibernate-ehcache/4.1.9.Final/hibernate-ehcache-4.1.9.Final.jar,/root/.m2/repository/net/sf/ehcache/ehcache-core/2.6.5/ehcache-core-2.6.5.jar,/root/.m2/repository/org/webjars/bootstrap/2.3.0/bootstrap-2.3.0.jar,/root/.m2/repository/org/webjars/jquery-ui/1.9.2/jquery-ui-1.9.2.jar,/root/.m2/repository/org/webjars/jquery/1.9.0/jquery-1.9.0.jar,/root/.m2/repository/org/springframework/spring-test/3.2.2.RELEASE/spring-test-3.2.2.RELEASE.jar,/root/.m2/repository/junit/junit/4.11/junit-4.11.jar,/root/.m2/repository/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar,/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar,/root/.m2/repository/org/aspectj/aspectjrt/1.7.2/aspectjrt-1.7.2.jar,/root/.m2/repository/org/aspectj/aspectjweaver/1.7.2/aspectjweaver-1.7.2.jar,.]
[loading ZipFileIndexFileObject[/root/.m2/repository/junit/junit/4.11/junit-4.11.jar(org/junit/Assert.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/joda-time/joda-time/2.2/joda-time-2.2.jar(org/joda/time/DateTime.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/junit/junit/4.11/junit-4.11.jar(org/junit/Test.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-beans/3.2.2.RELEASE/spring-beans-3.2.2.RELEASE.jar(org/springframework/beans/factory/annotation/Autowired.class)]]
[loading RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/model/Owner.class]]
[loading RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/model/Pet.class]]
[loading RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/model/PetType.class]]
[loading RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/model/Vet.class]]
[loading RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/model/Visit.class]]
[loading RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/util/EntityUtils.class]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-test/3.2.2.RELEASE/spring-test-3.2.2.RELEASE.jar(org/springframework/test/context/ContextConfiguration.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-tx/3.2.2.RELEASE/spring-tx-3.2.2.RELEASE.jar(org/springframework/transaction/annotation/Transactional.class)]]
[loading RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/service/ClinicService.class]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/junit/junit/4.11/junit-4.11.jar(org/junit/runner/RunWith.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-test/3.2.2.RELEASE/spring-test-3.2.2.RELEASE.jar(org/springframework/test/context/ActiveProfiles.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-test/3.2.2.RELEASE/spring-test-3.2.2.RELEASE.jar(org/springframework/test/context/junit4/SpringJUnit4ClassRunner.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar(org/hamcrest/Matchers.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-test/3.2.2.RELEASE/spring-test-3.2.2.RELEASE.jar(org/springframework/test/web/servlet/request/MockMvcRequestBuilders.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-test/3.2.2.RELEASE/spring-test-3.2.2.RELEASE.jar(org/springframework/test/web/servlet/result/MockMvcResultHandlers.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-test/3.2.2.RELEASE/spring-test-3.2.2.RELEASE.jar(org/springframework/test/web/servlet/result/MockMvcResultMatchers.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/junit/junit/4.11/junit-4.11.jar(org/junit/Before.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-web/3.2.2.RELEASE/spring-web-3.2.2.RELEASE.jar(org/springframework/http/MediaType.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-test/3.2.2.RELEASE/spring-test-3.2.2.RELEASE.jar(org/springframework/test/context/web/WebAppConfiguration.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-test/3.2.2.RELEASE/spring-test-3.2.2.RELEASE.jar(org/springframework/test/web/servlet/MockMvc.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-test/3.2.2.RELEASE/spring-test-3.2.2.RELEASE.jar(org/springframework/test/web/servlet/ResultActions.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-test/3.2.2.RELEASE/spring-test-3.2.2.RELEASE.jar(org/springframework/test/web/servlet/setup/MockMvcBuilders.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-web/3.2.2.RELEASE/spring-web-3.2.2.RELEASE.jar(org/springframework/web/context/WebApplicationContext.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/Table.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/Column.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar(javax/validation/constraints/Digits.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/OneToMany.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/CascadeType.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/hibernate-core/4.1.9.Final/hibernate-core-4.1.9.Final.jar(org/hibernate/annotations/Type.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-context/3.2.2.RELEASE/spring-context-3.2.2.RELEASE.jar(org/springframework/format/annotation/DateTimeFormat.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/JoinColumn.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/FetchType.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/ManyToMany.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/JoinTable.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-tx/3.2.2.RELEASE/spring-tx-3.2.2.RELEASE.jar(org/springframework/transaction/annotation/Propagation.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-tx/3.2.2.RELEASE/spring-tx-3.2.2.RELEASE.jar(org/springframework/transaction/annotation/Isolation.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Annotation.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/junit/junit/4.11/junit-4.11.jar(org/junit/runners/BlockJUnit4ClassRunner.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/junit/junit/4.11/junit-4.11.jar(org/junit/runners/ParentRunner.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar(javax/validation/Constraint.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-context/3.2.2.RELEASE/spring-context-3.2.2.RELEASE.jar(org/springframework/format/annotation/DateTimeFormat$ISO.class)]]
[checking org.springframework.samples.petclinic.service.AbstractClinicServiceTests]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Iterable.class)]]
[loading RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/model/Person.class]]
[loading RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/model/BaseEntity.class]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/GeneratedValue.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar(javax/persistence/GenerationType.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CharSequence.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class)]]
[loading RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/model/NamedEntity.class]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-orm/3.2.2.RELEASE/spring-orm-3.2.2.RELEASE.jar(org/springframework/orm/ObjectRetrievalFailureException.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class)]]
[loading RegularFileObject[/root/.jenkins/workspace/petclinic/target/classes/org/springframework/samples/petclinic/model/Specialty.class]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Error.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-tx/3.2.2.RELEASE/spring-tx-3.2.2.RELEASE.jar(org/springframework/dao/DataAccessException.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-core/3.2.2.RELEASE/spring-core-3.2.2.RELEASE.jar(org/springframework/core/NestedRuntimeException.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-tx/3.2.2.RELEASE/spring-tx-3.2.2.RELEASE.jar(org/springframework/dao/DataRetrievalFailureException.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-tx/3.2.2.RELEASE/spring-tx-3.2.2.RELEASE.jar(org/springframework/dao/NonTransientDataAccessException.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuilder.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AbstractStringBuilder.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Appendable.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuffer.class)]]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/test-classes/org/springframework/samples/petclinic/service/AbstractClinicServiceTests.class]]
[checking org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/test-classes/org/springframework/samples/petclinic/service/ClinicServiceSpringDataJpaTests.class]]
[checking org.springframework.samples.petclinic.service.ClinicServiceJpaTests]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/test-classes/org/springframework/samples/petclinic/service/ClinicServiceJpaTests.class]]
[checking org.springframework.samples.petclinic.model.OwnerTests]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/test-classes/org/springframework/samples/petclinic/model/OwnerTests.class]]
[checking org.springframework.samples.petclinic.web.VisitsViewTest]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-test/3.2.2.RELEASE/spring-test-3.2.2.RELEASE.jar(org/springframework/test/web/servlet/setup/DefaultMockMvcBuilder.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-test/3.2.2.RELEASE/spring-test-3.2.2.RELEASE.jar(org/springframework/test/web/servlet/MockMvcBuilder.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-test/3.2.2.RELEASE/spring-test-3.2.2.RELEASE.jar(org/springframework/test/web/servlet/MockMvcBuilderSupport.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-test/3.2.2.RELEASE/spring-test-3.2.2.RELEASE.jar(org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-test/3.2.2.RELEASE/spring-test-3.2.2.RELEASE.jar(org/springframework/test/web/servlet/RequestBuilder.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-beans/3.2.2.RELEASE/spring-beans-3.2.2.RELEASE.jar(org/springframework/beans/Mergeable.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-test/3.2.2.RELEASE/spring-test-3.2.2.RELEASE.jar(org/springframework/test/web/servlet/ResultHandler.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-test/3.2.2.RELEASE/spring-test-3.2.2.RELEASE.jar(org/springframework/test/web/servlet/result/StatusResultMatchers.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-test/3.2.2.RELEASE/spring-test-3.2.2.RELEASE.jar(org/springframework/test/web/servlet/ResultMatcher.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-test/3.2.2.RELEASE/spring-test-3.2.2.RELEASE.jar(org/springframework/test/web/servlet/result/ContentResultMatchers.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar(org/hamcrest/Matcher.class)]]
[loading ZipFileIndexFileObject[/root/.m2/repository/org/springframework/spring-test/3.2.2.RELEASE/spring-test-3.2.2.RELEASE.jar(org/springframework/test/web/servlet/result/XpathResultMatchers.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/javax/xml/xpath/XPathExpressionException.class)]]
[loading ZipFileIndexFileObject[/opt/jdk1.8.0_271/lib/ct.sym(META-INF/sym/rt.jar/javax/xml/xpath/XPathException.class)]]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/test-classes/org/springframework/samples/petclinic/web/VisitsViewTest.class]]
[checking org.springframework.samples.petclinic.service.ClinicServiceJdbcTests]
[wrote RegularFileObject[/root/.jenkins/workspace/petclinic/target/test-classes/org/springframework/samples/petclinic/service/ClinicServiceJdbcTests.class]]
[total 298ms]
[8mha:////4PdUVUWb9rjxH45CEUWo0p+16YC1YHSbjw1G62X6l+9sAAAAYh+LCAAAAAAAAP9b85aBtbiIQSWjNKU4P0+vJLE4u1gvPjexLDVPzxdEhicW5WXmpfvll6SeOJwgmrt9CSsTA0NFEYMUVEtyfl5xfk6qnjOEBilkgABGkMICAEQzmI1iAAAA[0m[WARNING] bootstrap class path not set in conjunction with -source 1.6
[INFO] 
[8mha:////4HEneeZge/z+9sLLF2NoPdCcgO47dUl9YgJHPUuS+dA2AAAAYB+LCAAAAAAAAP9b85aBtbiIQSmjNKU4P0+vJLE4u1gvPjexLDVPzxdEGvvmZ+X75Zek2mxOX+vh68DGxMBQUcQgBdWQnJ9XnJ+TqucMoUEKGSCAEaSwAAAn9LoiYAAAAA==[0m[INFO] --- maven-surefire-plugin:2.13:test (default-test) @ petclinic ---
[INFO] Surefire report directory: /root/.jenkins/workspace/petclinic/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests
17:14:46,879 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy]
17:14:46,879 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback-test.xml] at [file:/root/.jenkins/workspace/petclinic/target/test-classes/logback-test.xml]
17:14:47,092 |-INFO in ch.qos.logback.classic.joran.action.LoggerContextListenerAction - Adding LoggerContextListener of type [ch.qos.logback.classic.jul.LevelChangePropagator] to the object stack
17:14:47,148 |-INFO in ch.qos.logback.classic.jul.LevelChangePropagator@735f7ae5 - Propagating DEBUG level on Logger[ROOT] onto the JUL framework
17:14:47,149 |-INFO in ch.qos.logback.classic.joran.action.LoggerContextListenerAction - Starting LoggerContextListener
17:14:47,150 |-INFO in ch.qos.logback.classic.joran.action.JMXConfiguratorAction - begin
17:14:47,416 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
17:14:47,424 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [console]
17:14:47,442 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
17:14:47,539 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.springframework.samples.petclinic] to DEBUG
17:14:47,542 |-INFO in ch.qos.logback.classic.jul.LevelChangePropagator@735f7ae5 - Propagating DEBUG level on Logger[org.springframework.samples.petclinic] onto the JUL framework
17:14:47,545 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.springframework.test.web] to TRACE
17:14:47,546 |-INFO in ch.qos.logback.classic.jul.LevelChangePropagator@735f7ae5 - Propagating TRACE level on Logger[org.springframework.test.web] onto the JUL framework
17:14:47,546 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to WARN
17:14:47,546 |-INFO in ch.qos.logback.classic.jul.LevelChangePropagator@735f7ae5 - Propagating WARN level on Logger[ROOT] onto the JUL framework
17:14:47,547 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [console] to Logger[ROOT]
17:14:47,551 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.
17:14:47,559 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@7f13d6e - Registering current configuration as safe fallback point
Hibernate: select pet0_.id as id3_, pet0_.name as name3_, pet0_.birth_date as birth3_3_, pet0_.owner_id as owner4_3_, pet0_.type_id as type5_3_ from pets pet0_ where pet0_.id=?
Hibernate: select owner0_.id as id5_0_, owner0_.first_name as first2_5_0_, owner0_.last_name as last3_5_0_, owner0_.address as address5_0_, owner0_.city as city5_0_, owner0_.telephone as telephone5_0_ from owners owner0_ where owner0_.id=?
Hibernate: select pettype0_.id as id4_0_, pettype0_.name as name4_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet4_3_1_, visits0_.id as id2_1_, visits0_.id as id2_0_, visits0_.visit_date as visit2_2_0_, visits0_.description as descript3_2_0_, visits0_.pet_id as pet4_2_0_ from visits visits0_ where visits0_.pet_id=?
Hibernate: update pets set name=?, birth_date=?, owner_id=?, type_id=? where id=?
Hibernate: select pet0_.id as id3_, pet0_.name as name3_, pet0_.birth_date as birth3_3_, pet0_.owner_id as owner4_3_, pet0_.type_id as type5_3_ from pets pet0_ where pet0_.id=?
Hibernate: select pettype0_.id as id4_, pettype0_.name as name4_ from types pettype0_ order by pettype0_.name
Hibernate: select pettype0_.id as id4_, pettype0_.name as name4_ from types pettype0_ order by pettype0_.name
Hibernate: select pet0_.id as id3_, pet0_.name as name3_, pet0_.birth_date as birth3_3_, pet0_.owner_id as owner4_3_, pet0_.type_id as type5_3_ from pets pet0_ where pet0_.id=?
Hibernate: select owner0_.id as id5_0_, owner0_.first_name as first2_5_0_, owner0_.last_name as last3_5_0_, owner0_.address as address5_0_, owner0_.city as city5_0_, owner0_.telephone as telephone5_0_ from owners owner0_ where owner0_.id=?
Hibernate: select pettype0_.id as id4_0_, pettype0_.name as name4_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet4_3_1_, visits0_.id as id2_1_, visits0_.id as id2_0_, visits0_.visit_date as visit2_2_0_, visits0_.description as descript3_2_0_, visits0_.pet_id as pet4_2_0_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select pet0_.id as id3_, pet0_.name as name3_, pet0_.birth_date as birth3_3_, pet0_.owner_id as owner4_3_, pet0_.type_id as type5_3_ from pets pet0_ where pet0_.id=?
Hibernate: select owner0_.id as id5_0_, owner0_.first_name as first2_5_0_, owner0_.last_name as last3_5_0_, owner0_.address as address5_0_, owner0_.city as city5_0_, owner0_.telephone as telephone5_0_ from owners owner0_ where owner0_.id=?
Hibernate: select pettype0_.id as id4_0_, pettype0_.name as name4_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet4_3_1_, visits0_.id as id2_1_, visits0_.id as id2_0_, visits0_.visit_date as visit2_2_0_, visits0_.description as descript3_2_0_, visits0_.pet_id as pet4_2_0_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select vet0_.id as id0_, vet0_.first_name as first2_0_, vet0_.last_name as last3_0_ from vets vet0_
Hibernate: select specialtie0_.vet_id as vet1_0_1_, specialtie0_.specialty_id as specialty2_6_1_, specialty1_.id as id1_0_, specialty1_.name as name1_0_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
Hibernate: select specialtie0_.vet_id as vet1_0_1_, specialtie0_.specialty_id as specialty2_6_1_, specialty1_.id as id1_0_, specialty1_.name as name1_0_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
Hibernate: select specialtie0_.vet_id as vet1_0_1_, specialtie0_.specialty_id as specialty2_6_1_, specialty1_.id as id1_0_, specialty1_.name as name1_0_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
Hibernate: select specialtie0_.vet_id as vet1_0_1_, specialtie0_.specialty_id as specialty2_6_1_, specialty1_.id as id1_0_, specialty1_.name as name1_0_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
Hibernate: select specialtie0_.vet_id as vet1_0_1_, specialtie0_.specialty_id as specialty2_6_1_, specialty1_.id as id1_0_, specialty1_.name as name1_0_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
Hibernate: select specialtie0_.vet_id as vet1_0_1_, specialtie0_.specialty_id as specialty2_6_1_, specialty1_.id as id1_0_, specialty1_.name as name1_0_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
Hibernate: select owner0_.id as id5_0_, pets1_.id as id3_1_, owner0_.first_name as first2_5_0_, owner0_.last_name as last3_5_0_, owner0_.address as address5_0_, owner0_.city as city5_0_, owner0_.telephone as telephone5_0_, pets1_.name as name3_1_, pets1_.birth_date as birth3_3_1_, pets1_.owner_id as owner4_3_1_, pets1_.type_id as type5_3_1_, pets1_.owner_id as owner4_5_0__, pets1_.id as id3_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id4_0_, pettype0_.name as name4_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet4_3_1_, visits0_.id as id2_1_, visits0_.id as id2_0_, visits0_.visit_date as visit2_2_0_, visits0_.description as descript3_2_0_, visits0_.pet_id as pet4_2_0_ from visits visits0_ where visits0_.pet_id=?
Hibernate: update owners set first_name=?, last_name=?, address=?, city=?, telephone=? where id=?
Hibernate: select owner0_.id as id5_0_, pets1_.id as id3_1_, owner0_.first_name as first2_5_0_, owner0_.last_name as last3_5_0_, owner0_.address as address5_0_, owner0_.city as city5_0_, owner0_.telephone as telephone5_0_, pets1_.name as name3_1_, pets1_.birth_date as birth3_3_1_, pets1_.owner_id as owner4_3_1_, pets1_.type_id as type5_3_1_, pets1_.owner_id as owner4_5_0__, pets1_.id as id3_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select owner0_.id as id5_0_, pets1_.id as id3_1_, owner0_.first_name as first2_5_0_, owner0_.last_name as last3_5_0_, owner0_.address as address5_0_, owner0_.city as city5_0_, owner0_.telephone as telephone5_0_, pets1_.name as name3_1_, pets1_.birth_date as birth3_3_1_, pets1_.owner_id as owner4_3_1_, pets1_.type_id as type5_3_1_, pets1_.owner_id as owner4_5_0__, pets1_.id as id3_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id4_0_, pettype0_.name as name4_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet4_3_1_, visits0_.id as id2_1_, visits0_.id as id2_0_, visits0_.visit_date as visit2_2_0_, visits0_.description as descript3_2_0_, visits0_.pet_id as pet4_2_0_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select visits0_.pet_id as pet4_3_1_, visits0_.id as id2_1_, visits0_.id as id2_0_, visits0_.visit_date as visit2_2_0_, visits0_.description as descript3_2_0_, visits0_.pet_id as pet4_2_0_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select pettype0_.id as id4_, pettype0_.name as name4_ from types pettype0_ order by pettype0_.name
Hibernate: insert into pets (id, name, birth_date, owner_id, type_id) values (default, ?, ?, ?, ?)
Hibernate: select owner0_.id as id5_0_, pets1_.id as id3_1_, owner0_.first_name as first2_5_0_, owner0_.last_name as last3_5_0_, owner0_.address as address5_0_, owner0_.city as city5_0_, owner0_.telephone as telephone5_0_, pets1_.name as name3_1_, pets1_.birth_date as birth3_3_1_, pets1_.owner_id as owner4_3_1_, pets1_.type_id as type5_3_1_, pets1_.owner_id as owner4_5_0__, pets1_.id as id3_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select owner0_.id as id5_0_, pets1_.id as id3_1_, owner0_.first_name as first2_5_0_, owner0_.last_name as last3_5_0_, owner0_.address as address5_0_, owner0_.city as city5_0_, owner0_.telephone as telephone5_0_, pets1_.name as name3_1_, pets1_.birth_date as birth3_3_1_, pets1_.owner_id as owner4_3_1_, pets1_.type_id as type5_3_1_, pets1_.owner_id as owner4_5_0__, pets1_.id as id3_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id4_0_, pettype0_.name as name4_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet4_3_1_, visits0_.id as id2_1_, visits0_.id as id2_0_, visits0_.visit_date as visit2_2_0_, visits0_.description as descript3_2_0_, visits0_.pet_id as pet4_2_0_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select owner0_.id as id5_0_, pets1_.id as id3_1_, owner0_.first_name as first2_5_0_, owner0_.last_name as last3_5_0_, owner0_.address as address5_0_, owner0_.city as city5_0_, owner0_.telephone as telephone5_0_, pets1_.name as name3_1_, pets1_.birth_date as birth3_3_1_, pets1_.owner_id as owner4_3_1_, pets1_.type_id as type5_3_1_, pets1_.owner_id as owner4_5_0__, pets1_.id as id3_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id4_0_, pettype0_.name as name4_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select pettype0_.id as id4_0_, pettype0_.name as name4_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet4_3_1_, visits0_.id as id2_1_, visits0_.id as id2_0_, visits0_.visit_date as visit2_2_0_, visits0_.description as descript3_2_0_, visits0_.pet_id as pet4_2_0_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select visits0_.pet_id as pet4_3_1_, visits0_.id as id2_1_, visits0_.id as id2_0_, visits0_.visit_date as visit2_2_0_, visits0_.description as descript3_2_0_, visits0_.pet_id as pet4_2_0_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select distinct owner0_.id as id5_0_, pets1_.id as id3_1_, owner0_.first_name as first2_5_0_, owner0_.last_name as last3_5_0_, owner0_.address as address5_0_, owner0_.city as city5_0_, owner0_.telephone as telephone5_0_, pets1_.name as name3_1_, pets1_.birth_date as birth3_3_1_, pets1_.owner_id as owner4_3_1_, pets1_.type_id as type5_3_1_, pets1_.owner_id as owner4_5_0__, pets1_.id as id3_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
Hibernate: insert into owners (id, first_name, last_name, address, city, telephone) values (default, ?, ?, ?, ?, ?)
Hibernate: select distinct owner0_.id as id5_0_, pets1_.id as id3_1_, owner0_.first_name as first2_5_0_, owner0_.last_name as last3_5_0_, owner0_.address as address5_0_, owner0_.city as city5_0_, owner0_.telephone as telephone5_0_, pets1_.name as name3_1_, pets1_.birth_date as birth3_3_1_, pets1_.owner_id as owner4_3_1_, pets1_.type_id as type5_3_1_, pets1_.owner_id as owner4_5_0__, pets1_.id as id3_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
Hibernate: select pet0_.id as id3_, pet0_.name as name3_, pet0_.birth_date as birth3_3_, pet0_.owner_id as owner4_3_, pet0_.type_id as type5_3_ from pets pet0_ where pet0_.id=?
Hibernate: select owner0_.id as id5_0_, owner0_.first_name as first2_5_0_, owner0_.last_name as last3_5_0_, owner0_.address as address5_0_, owner0_.city as city5_0_, owner0_.telephone as telephone5_0_ from owners owner0_ where owner0_.id=?
Hibernate: select pettype0_.id as id4_0_, pettype0_.name as name4_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet4_3_1_, visits0_.id as id2_1_, visits0_.id as id2_0_, visits0_.visit_date as visit2_2_0_, visits0_.description as descript3_2_0_, visits0_.pet_id as pet4_2_0_ from visits visits0_ where visits0_.pet_id=?
Hibernate: insert into visits (id, visit_date, description, pet_id) values (default, ?, ?, ?)
Hibernate: select pet0_.id as id3_, pet0_.name as name3_, pet0_.birth_date as birth3_3_, pet0_.owner_id as owner4_3_, pet0_.type_id as type5_3_ from pets pet0_ where pet0_.id=?
Hibernate: select distinct owner0_.id as id5_0_, pets1_.id as id3_1_, owner0_.first_name as first2_5_0_, owner0_.last_name as last3_5_0_, owner0_.address as address5_0_, owner0_.city as city5_0_, owner0_.telephone as telephone5_0_, pets1_.name as name3_1_, pets1_.birth_date as birth3_3_1_, pets1_.owner_id as owner4_3_1_, pets1_.type_id as type5_3_1_, pets1_.owner_id as owner4_5_0__, pets1_.id as id3_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
Hibernate: select pettype0_.id as id4_0_, pettype0_.name as name4_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select pettype0_.id as id4_0_, pettype0_.name as name4_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet4_3_1_, visits0_.id as id2_1_, visits0_.id as id2_0_, visits0_.visit_date as visit2_2_0_, visits0_.description as descript3_2_0_, visits0_.pet_id as pet4_2_0_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select visits0_.pet_id as pet4_3_1_, visits0_.id as id2_1_, visits0_.id as id2_0_, visits0_.visit_date as visit2_2_0_, visits0_.description as descript3_2_0_, visits0_.pet_id as pet4_2_0_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select distinct owner0_.id as id5_0_, pets1_.id as id3_1_, owner0_.first_name as first2_5_0_, owner0_.last_name as last3_5_0_, owner0_.address as address5_0_, owner0_.city as city5_0_, owner0_.telephone as telephone5_0_, pets1_.name as name3_1_, pets1_.birth_date as birth3_3_1_, pets1_.owner_id as owner4_3_1_, pets1_.type_id as type5_3_1_, pets1_.owner_id as owner4_5_0__, pets1_.id as id3_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.461 sec
Running org.springframework.samples.petclinic.service.ClinicServiceJpaTests
WARN  EntityManagerFactoryRegistry - HHH000436: Entity manager factory name (petclinic) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Hibernate: select pet0_.id as id16_3_, pet0_.name as name16_3_, pet0_.birth_date as birth3_16_3_, pet0_.owner_id as owner4_16_3_, pet0_.type_id as type5_16_3_, owner1_.id as id18_0_, owner1_.first_name as first2_18_0_, owner1_.last_name as last3_18_0_, owner1_.address as address18_0_, owner1_.city as city18_0_, owner1_.telephone as telephone18_0_, pettype2_.id as id17_1_, pettype2_.name as name17_1_, visits3_.pet_id as pet4_16_5_, visits3_.id as id15_5_, visits3_.id as id15_2_, visits3_.visit_date as visit2_15_2_, visits3_.description as descript3_15_2_, visits3_.pet_id as pet4_15_2_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?
Hibernate: select pettype0_.id as id17_, pettype0_.name as name17_ from types pettype0_ order by pettype0_.name
Hibernate: select pettype0_.id as id17_, pettype0_.name as name17_ from types pettype0_ order by pettype0_.name
Hibernate: select pet0_.id as id16_3_, pet0_.name as name16_3_, pet0_.birth_date as birth3_16_3_, pet0_.owner_id as owner4_16_3_, pet0_.type_id as type5_16_3_, owner1_.id as id18_0_, owner1_.first_name as first2_18_0_, owner1_.last_name as last3_18_0_, owner1_.address as address18_0_, owner1_.city as city18_0_, owner1_.telephone as telephone18_0_, pettype2_.id as id17_1_, pettype2_.name as name17_1_, visits3_.pet_id as pet4_16_5_, visits3_.id as id15_5_, visits3_.id as id15_2_, visits3_.visit_date as visit2_15_2_, visits3_.description as descript3_15_2_, visits3_.pet_id as pet4_15_2_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?
Hibernate: select pet0_.id as id16_3_, pet0_.name as name16_3_, pet0_.birth_date as birth3_16_3_, pet0_.owner_id as owner4_16_3_, pet0_.type_id as type5_16_3_, owner1_.id as id18_0_, owner1_.first_name as first2_18_0_, owner1_.last_name as last3_18_0_, owner1_.address as address18_0_, owner1_.city as city18_0_, owner1_.telephone as telephone18_0_, pettype2_.id as id17_1_, pettype2_.name as name17_1_, visits3_.pet_id as pet4_16_5_, visits3_.id as id15_5_, visits3_.id as id15_2_, visits3_.visit_date as visit2_15_2_, visits3_.description as descript3_15_2_, visits3_.pet_id as pet4_15_2_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?
Hibernate: select vet0_.id as id13_0_, specialty2_.id as id14_1_, vet0_.first_name as first2_13_0_, vet0_.last_name as last3_13_0_, specialty2_.name as name14_1_, specialtie1_.vet_id as vet1_13_0__, specialtie1_.specialty_id as specialty2_19_0__ from vets vet0_ inner join vet_specialties specialtie1_ on vet0_.id=specialtie1_.vet_id inner join specialties specialty2_ on specialtie1_.specialty_id=specialty2_.id order by vet0_.last_name, vet0_.first_name
Hibernate: select owner0_.id as id18_0_, pets1_.id as id16_1_, owner0_.first_name as first2_18_0_, owner0_.last_name as last3_18_0_, owner0_.address as address18_0_, owner0_.city as city18_0_, owner0_.telephone as telephone18_0_, pets1_.name as name16_1_, pets1_.birth_date as birth3_16_1_, pets1_.owner_id as owner4_16_1_, pets1_.type_id as type5_16_1_, pets1_.owner_id as owner4_18_0__, pets1_.id as id16_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id17_0_, pettype0_.name as name17_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet4_16_1_, visits0_.id as id15_1_, visits0_.id as id15_0_, visits0_.visit_date as visit2_15_0_, visits0_.description as descript3_15_0_, visits0_.pet_id as pet4_15_0_ from visits visits0_ where visits0_.pet_id=?
Hibernate: update owners set first_name=?, last_name=?, address=?, city=?, telephone=? where id=?
Hibernate: select owner0_.id as id18_0_, pets1_.id as id16_1_, owner0_.first_name as first2_18_0_, owner0_.last_name as last3_18_0_, owner0_.address as address18_0_, owner0_.city as city18_0_, owner0_.telephone as telephone18_0_, pets1_.name as name16_1_, pets1_.birth_date as birth3_16_1_, pets1_.owner_id as owner4_16_1_, pets1_.type_id as type5_16_1_, pets1_.owner_id as owner4_18_0__, pets1_.id as id16_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select owner0_.id as id18_0_, pets1_.id as id16_1_, owner0_.first_name as first2_18_0_, owner0_.last_name as last3_18_0_, owner0_.address as address18_0_, owner0_.city as city18_0_, owner0_.telephone as telephone18_0_, pets1_.name as name16_1_, pets1_.birth_date as birth3_16_1_, pets1_.owner_id as owner4_16_1_, pets1_.type_id as type5_16_1_, pets1_.owner_id as owner4_18_0__, pets1_.id as id16_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id17_0_, pettype0_.name as name17_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet4_16_1_, visits0_.id as id15_1_, visits0_.id as id15_0_, visits0_.visit_date as visit2_15_0_, visits0_.description as descript3_15_0_, visits0_.pet_id as pet4_15_0_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select visits0_.pet_id as pet4_16_1_, visits0_.id as id15_1_, visits0_.id as id15_0_, visits0_.visit_date as visit2_15_0_, visits0_.description as descript3_15_0_, visits0_.pet_id as pet4_15_0_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select pettype0_.id as id17_, pettype0_.name as name17_ from types pettype0_ order by pettype0_.name
Hibernate: insert into pets (id, name, birth_date, owner_id, type_id) values (default, ?, ?, ?, ?)
Hibernate: insert into pets (id, name, birth_date, owner_id, type_id) values (default, ?, ?, ?, ?)
Hibernate: select owner0_.id as id18_0_, pets1_.id as id16_1_, owner0_.first_name as first2_18_0_, owner0_.last_name as last3_18_0_, owner0_.address as address18_0_, owner0_.city as city18_0_, owner0_.telephone as telephone18_0_, pets1_.name as name16_1_, pets1_.birth_date as birth3_16_1_, pets1_.owner_id as owner4_16_1_, pets1_.type_id as type5_16_1_, pets1_.owner_id as owner4_18_0__, pets1_.id as id16_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select owner0_.id as id18_0_, pets1_.id as id16_1_, owner0_.first_name as first2_18_0_, owner0_.last_name as last3_18_0_, owner0_.address as address18_0_, owner0_.city as city18_0_, owner0_.telephone as telephone18_0_, pets1_.name as name16_1_, pets1_.birth_date as birth3_16_1_, pets1_.owner_id as owner4_16_1_, pets1_.type_id as type5_16_1_, pets1_.owner_id as owner4_18_0__, pets1_.id as id16_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id17_0_, pettype0_.name as name17_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet4_16_1_, visits0_.id as id15_1_, visits0_.id as id15_0_, visits0_.visit_date as visit2_15_0_, visits0_.description as descript3_15_0_, visits0_.pet_id as pet4_15_0_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select owner0_.id as id18_0_, pets1_.id as id16_1_, owner0_.first_name as first2_18_0_, owner0_.last_name as last3_18_0_, owner0_.address as address18_0_, owner0_.city as city18_0_, owner0_.telephone as telephone18_0_, pets1_.name as name16_1_, pets1_.birth_date as birth3_16_1_, pets1_.owner_id as owner4_16_1_, pets1_.type_id as type5_16_1_, pets1_.owner_id as owner4_18_0__, pets1_.id as id16_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id17_0_, pettype0_.name as name17_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select pettype0_.id as id17_0_, pettype0_.name as name17_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet4_16_1_, visits0_.id as id15_1_, visits0_.id as id15_0_, visits0_.visit_date as visit2_15_0_, visits0_.description as descript3_15_0_, visits0_.pet_id as pet4_15_0_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select visits0_.pet_id as pet4_16_1_, visits0_.id as id15_1_, visits0_.id as id15_0_, visits0_.visit_date as visit2_15_0_, visits0_.description as descript3_15_0_, visits0_.pet_id as pet4_15_0_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select distinct owner0_.id as id18_0_, pets1_.id as id16_1_, owner0_.first_name as first2_18_0_, owner0_.last_name as last3_18_0_, owner0_.address as address18_0_, owner0_.city as city18_0_, owner0_.telephone as telephone18_0_, pets1_.name as name16_1_, pets1_.birth_date as birth3_16_1_, pets1_.owner_id as owner4_16_1_, pets1_.type_id as type5_16_1_, pets1_.owner_id as owner4_18_0__, pets1_.id as id16_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
Hibernate: insert into owners (id, first_name, last_name, address, city, telephone) values (default, ?, ?, ?, ?, ?)
Hibernate: select distinct owner0_.id as id18_0_, pets1_.id as id16_1_, owner0_.first_name as first2_18_0_, owner0_.last_name as last3_18_0_, owner0_.address as address18_0_, owner0_.city as city18_0_, owner0_.telephone as telephone18_0_, pets1_.name as name16_1_, pets1_.birth_date as birth3_16_1_, pets1_.owner_id as owner4_16_1_, pets1_.type_id as type5_16_1_, pets1_.owner_id as owner4_18_0__, pets1_.id as id16_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
Hibernate: select pet0_.id as id16_3_, pet0_.name as name16_3_, pet0_.birth_date as birth3_16_3_, pet0_.owner_id as owner4_16_3_, pet0_.type_id as type5_16_3_, owner1_.id as id18_0_, owner1_.first_name as first2_18_0_, owner1_.last_name as last3_18_0_, owner1_.address as address18_0_, owner1_.city as city18_0_, owner1_.telephone as telephone18_0_, pettype2_.id as id17_1_, pettype2_.name as name17_1_, visits3_.pet_id as pet4_16_5_, visits3_.id as id15_5_, visits3_.id as id15_2_, visits3_.visit_date as visit2_15_2_, visits3_.description as descript3_15_2_, visits3_.pet_id as pet4_15_2_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?
Hibernate: insert into visits (id, visit_date, description, pet_id) values (default, ?, ?, ?)
Hibernate: insert into visits (id, visit_date, description, pet_id) values (default, ?, ?, ?)
Hibernate: select distinct owner0_.id as id18_0_, pets1_.id as id16_1_, owner0_.first_name as first2_18_0_, owner0_.last_name as last3_18_0_, owner0_.address as address18_0_, owner0_.city as city18_0_, owner0_.telephone as telephone18_0_, pets1_.name as name16_1_, pets1_.birth_date as birth3_16_1_, pets1_.owner_id as owner4_16_1_, pets1_.type_id as type5_16_1_, pets1_.owner_id as owner4_18_0__, pets1_.id as id16_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
Hibernate: select pettype0_.id as id17_0_, pettype0_.name as name17_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select pettype0_.id as id17_0_, pettype0_.name as name17_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet4_16_1_, visits0_.id as id15_1_, visits0_.id as id15_0_, visits0_.visit_date as visit2_15_0_, visits0_.description as descript3_15_0_, visits0_.pet_id as pet4_15_0_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select visits0_.pet_id as pet4_16_1_, visits0_.id as id15_1_, visits0_.id as id15_0_, visits0_.visit_date as visit2_15_0_, visits0_.description as descript3_15_0_, visits0_.pet_id as pet4_15_0_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select distinct owner0_.id as id18_0_, pets1_.id as id16_1_, owner0_.first_name as first2_18_0_, owner0_.last_name as last3_18_0_, owner0_.address as address18_0_, owner0_.city as city18_0_, owner0_.telephone as telephone18_0_, pets1_.name as name16_1_, pets1_.birth_date as birth3_16_1_, pets1_.owner_id as owner4_16_1_, pets1_.type_id as type5_16_1_, pets1_.owner_id as owner4_18_0__, pets1_.id as id16_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.769 sec
Running org.springframework.samples.petclinic.service.ClinicServiceJdbcTests
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.812 sec
Running org.springframework.samples.petclinic.model.OwnerTests
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec

Results :

Tests run: 31, Failures: 0, Errors: 0, Skipped: 0

[INFO] 
[8mha:////4HEneeZge/z+9sLLF2NoPdCcgO47dUl9YgJHPUuS+dA2AAAAYB+LCAAAAAAAAP9b85aBtbiIQSmjNKU4P0+vJLE4u1gvPjexLDVPzxdEGvvmZ+X75Zek2mxOX+vh68DGxMBQUcQgBdWQnJ9XnJ+TqucMoUEKGSCAEaSwAAAn9LoiYAAAAA==[0m[INFO] --- maven-war-plugin:2.3:war (default-war) @ petclinic ---
[INFO] Packaging webapp
[INFO] Assembling webapp [petclinic] in [/root/.jenkins/workspace/petclinic/target/petclinic-20140513]
[INFO] Processing war project
[INFO] Copying webapp resources [/root/.jenkins/workspace/petclinic/src/main/webapp]
[INFO] Webapp assembled in [255 msecs]
[INFO] Building war: /root/.jenkins/workspace/petclinic/target/petclinic.war
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  14.532 s
[INFO] Finished at: 2022-08-06T17:14:55Z
[INFO] ------------------------------------------------------------------------
Finished: SUCCESS
